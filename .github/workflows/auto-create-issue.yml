name: Smart Auto Create Issues on Push

on:
  push:
    branches:
      - main
      - master

jobs:
  create-issue:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Create Issue
        uses: actions/github-script@v7
        id: create-issue
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Starting Issue Creation...');
            
            // Get the GitHub username of the person who pushed
            const assignee = context.payload.sender.login;
            console.log('Push sender:', assignee);
            
            // Create issue title
            const issueTitle = 'Update: ' + context.payload.head_commit.message.split('\n')[0];
            
            // Create issue body
            const issueBody = '## Update Summary\n\n' +
              '**Commit:** `' + context.payload.head_commit.id.substring(0, 7) + '`\n' +
              '**Author:** ' + context.payload.head_commit.author.name + '\n' +
              '**Date:** ' + new Date(context.payload.head_commit.timestamp).toLocaleString() + '\n\n' +
              '### Changes Made\n' +
              context.payload.head_commit.message + '\n\n' +
              '### Statistics\n' +
              '- **Additions:** +' + (context.payload.head_commit.additions || 0) + ' lines\n' +
              '- **Deletions:** -' + (context.payload.head_commit.deletions || 0) + ' lines\n' +
              '- **Total Changes:** ' + ((context.payload.head_commit.additions || 0) + (context.payload.head_commit.deletions || 0)) + ' lines\n\n' +
              '### Related Links\n' +
              '- **Commit:** [' + context.payload.head_commit.id.substring(0, 7) + '](' + (context.payload.head_commit.url || '#') + ')\n' +
              '- **Branch:** `' + context.ref.replace('refs/heads/', '') + '`\n' +
              '- **Repository:** [' + context.repo.owner + '/' + context.repo.repo + '](' + context.payload.repository.html_url + ')\n\n' +
              '---\n' +
              '*This issue was automatically created by GitHub Actions on push to ' + context.ref.replace('refs/heads/', '') + ' branch.*\n\n' +
              '## Auto Complete Countdown\n\n' +
              '**Status:** Processing...\n' +
              '**Time Remaining:** 10 seconds\n' +
              '**Progress:** 100%\n\n' +
              '> This issue will automatically complete in **10 seconds**\n' +
              '> Auto-complete process will start shortly';

            try {
              // Create issue
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['auto-generated', 'update', 'push'],
                assignees: [assignee]
              });
              
              console.log('Issue created successfully: #' + issue.data.number);
              console.log('Auto-assigned to:', assignee);
              
              // Save issue number for auto-complete workflow
              core.setOutput('issue-number', issue.data.number);
              core.setOutput('issue-body', issueBody);
              core.setOutput('assignee', assignee);
              
              console.log('Issue number saved for auto-complete workflow:', issue.data.number);
              
            } catch (error) {
              console.error('Failed to create issue:', error.message);
            }
